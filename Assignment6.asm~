section .data

msg: db "----------Checking the mode of operation of machine----------",0x0A
len: equ $-msg

msg1: db "Working in real mode!",0x0A
len1: equ $-msg1

msg2: db "Working in protected mode!",0x0A
len2: equ $-msg2

msg3: db "The contents of MSW are: ",0x0A
len3: equ $-msg3

msg4: db "The contents of GDTR are: ",0x0A
len4: equ $-msg4

msg5: db "The contents of LDTR are: ",0x0A
len5: equ $-msg5

msg6: db "The contents of IDTR are: ",0x0A
len6: equ $-msg6

msg7: db "The contents of TR are: ",0x0A
len7: equ $-msg7

n1: db " ",10
l1: equ $-n1

section .bss

var1: resb 8
count: resb 1
temp: resb 6
fingdtr: resb 12
four: resb 4

%macro readwrite 3
mov rax,%3
mov rdi,1
mov rsi,%1
mov rdx,%2
syscall
%endmacro

section .text															
global main
main:
readwrite msg,len,1
smsw eax
bt ax,0
jc down
readwrite msg1,len1,1
jmp disp
down: readwrite msg2,len2,1

;*********To display MSW content********
readwrite msg3,len3,1
disp: call disp_32bit
readwrite var1,8,1
readwrite n1,l1,1

;*********To display GDTR content********	
readwrite msg4,len4,1
sgdt [temp]
call disp_48bit
readwrite fingdtr,12,1
readwrite n1,l1,1

;*********To display LDTR content********
readwrite msg5,len5,1
sldt ax
call disp_16bit
readwrite four,4,1
readwrite n1,l1,1

;*********To display IDTR content********
readwrite msg6,len6,1
sidt [temp]
call disp_48bit
readwrite fingdtr,12,1
readwrite n1,l1,1

mov rax,60
mov rdi,0
syscall


disp_32bit:
		mov byte[count],8
		mov ecx,eax
		mov rdi,var1
	addr_32:
		rol ecx,04
		mov dl,cl
		and dl,0FH
		cmp dl,09H
		jbe next2
		add dl,07H
		next2: add dl,30H
		mov byte[rdi],dl
		inc rdi
		dec byte[count]
		jnz addr_32
ret

disp_48bit:
		mov byte[count],12
		mov rbx,[temp]
		rol rbx,48
		mov rdi,fingdtr
	addr_48:
		rol rbx,04
		mov dl,bl
		and dl,0FH
		cmp dl,09H
		jbe next3
		add dl,07H
		next3: add dl,30H
		mov byte[rdi],dl
		inc rdi
		dec byte[count]
		jnz addr_48
ret

disp_16bit:
		mov byte[count],4
		mov cx,ax
		mov rdi,four
	addr_16:
		rol cx,04
		mov dl,cl
		and dl,0FH
		cmp dl,09H
		jbe next4
		add dl,07H
		next4: add dl,30H
		mov byte[rdi],dl
		inc rdi
		dec byte[count]
		jnz addr_16
ret

