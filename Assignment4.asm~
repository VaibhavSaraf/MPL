section .data
menu: db "-----Menu-----",0x0A
         db "1. Successive Addition",0x0A
         db "2. Add and Shift Method",0x0A
         db "3. Exit",0x0A
         db "Enter your choice: "
len: equ $-menu

enterfirst: db "Enter the first number: "
len1: equ $-enterfirst

entersecond: db "Enter the second number: "
len2: equ $-entersecond

cnt: db 0x00
ans: dw 0x00
num1: db 0x00
num2: db 0x00


section .bss

%macro readwrite 3
mov rax,%3
mov rdi,1
mov rsi,%1
mov rdx,%2
syscall
%endmacro

choice: resb 2
temp: resb 3

section .text
global main
main:
readwrite menu,len,1
readwrite choice,2,0

cmp byte[choice],31H
je succadd
cmp byte[choice],32H
je addshift
cmp byte[choice],33H
je exit

succadd:
readwrite enterfirst,len1,1
readwrite temp,3,0
call atoh
mov byte[num1],al
readwrite entersecond,len2,1
readwrite temp,3,0
call atoh
mov byte[num2],al
mov rax,qword[num1]
succesive:
add rax,qword[num1]
dec byte[num2]
jnz succesive
call htoa
readwrite ans,4,1
jmp exit

addshift:
jmp exit

atoh:
mov rax,00
mov rsi,temp
mov byte[cnt],2
up:
rol ax,04
mov bl,byte[rsi]
cmp bl,39H
jbe next
sub bl,07
next:
sub bl,30H
add al,bl
inc rsi
dec byte[cnt]
jnz up
ret

htoa:
mov rdi,ans
mov byte[cnt],4
up2:
rol ax,04
mov cl,al     		
and cl,0FH 
cmp cl,09  
jbe next2	
add cl,07	
next2:	 
add cl,30H	  
mov byte[rdi],cl
inc dx
dec byte[cnt]
jnz up2
ret


exit:
mov rax,60
mov rdi,0
syscall



